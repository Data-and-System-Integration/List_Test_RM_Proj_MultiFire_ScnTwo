package com.deepika.list_test_rm_proj_multifire_scntwo;

import java.util.*;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class combined_pojo implements java.io.Serializable {

    static final long serialVersionUID = 1L;
    int i = 0, j = 0;

    public combined_pojo() {
    }
    
    private java.lang.String strVal;
    private java.util.List<java.lang.String> UDC = new ArrayList<String>();
    private java.util.List<java.lang.String> secondList = new ArrayList<String>();
    private java.util.List<java.lang.String> UDC1 = new ArrayList<String>();
    private java.math.BigDecimal data_ppmonth;
    
    public java.math.BigDecimal getData_ppmonth() {
		return data_ppmonth;
	}
	public void setData_ppmonth(java.math.BigDecimal data_ppmonth) {
		this.data_ppmonth = data_ppmonth;
	}
	
	public java.lang.String getStrVal() {
		return this.strVal;
	}

	public void setStrVal(java.lang.String strVal) {
		this.strVal = strVal;
	}


    public java.util.List<java.lang.String> getSecondList() {
		return this.secondList;
	}

	public void setSecondList(java.lang.String input) {
			this.secondList.add(input);
	}


    public java.util.List<java.lang.String> getUDC() {
		return this.UDC;
	}

	public void setUDC(java.lang.String input) {
	    removeOldElemetns(i, UDC, input);
	}

	public java.util.List<java.lang.String> getUDC1() {
		return this.UDC1;
	}

//	public void setUDC1(java.lang.String input) {
//		removeOldElemetns(j, UDC1, input);
//	}

    public void updateList(java.util.List<java.lang.String> inpiutList){
        inpiutList.removeAll(inpiutList);
    }
	
	public void removeOldElemetns(int counter, java.util.List<java.lang.String> inputList, java.lang.String input){
	    if(counter == 0){
	        inputList.removeAll(inputList);
			inputList.add(input);
			counter = 1;
	    }else{
	        inputList.add(input);
	    }
	}
	
	private Map<String,String> testMap = new HashMap<String,String>();


    public void setUDC1(java.lang.String input) {
        int counter = 0 ;
        testMap.put("first",counter);

        if(testMap.getValue() == 0){
	        UDC1.removeAll(UDC1);
			UDC1.add(input);
			counter = 1;
			testMap.put("first",1);
			
	    }else{
	        UDC1.add(input);
	    }
	}
	


}






